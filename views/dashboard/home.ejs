<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <title>Dashboard Utilisateur</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body class="bg-gray-100 min-h-screen">

    <!-- Navbar -->
    <nav class="bg-white shadow-lg p-4 flex justify-between items-center">
        <div class="text-xl font-bold">FinSolution Finance</div>
        <div class="flex items-center gap-4">
            <% if (displayName) { %>
                <span>Bienvenue, <%= displayName %>!</span>
                <% } else { %>
                    <p>Bienvenue, Guest!</p>
                    <% } %>
                        <button id="logoutBtn" class="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 transition">
                            Déconnexion
                        </button>
        </div>
    </nav>

    <div class="container mx-auto mt-6 p-4">

        <!-- Solde actuel -->
        <div class="bg-white shadow rounded-lg p-6 mb-6 hover:shadow-lg transition">
            <h2 class="text-gray-500 text-sm">Solde Actuel</h2>
            <p class="text-3xl font-bold text-green-500">3,500 MAD</p>
        </div>

        <div class="grid md:grid-cols-3 gap-6">

            <!-- Formulaire nouvelle transaction -->
            <div class="bg-white shadow rounded-lg p-6 hover:shadow-lg transition">
                <h3 class="text-lg font-semibold mb-4">Ajouter une Transaction</h3>
                <form id="transactionForm" class="space-y-4">
                    <div>
                        <label class="block text-gray-700">Type</label>
                        <select class="w-full border rounded px-3 py-2" name="type">
                            <option value="revenu">Revenu</option>
                            <option value="depense">Dépense</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-gray-700">Catégorie</label>
                        <select name="categorie" class="w-full border rounded px-3 py-2">
                            <% categories.forEach(cat=> { %>
                                <option value="<%= cat.name %>">
                                    <%= cat.name %>
                                </option>
                                <% }) %>
                        </select>
                    </div>
                    <div>
                        <label class="block text-gray-700">Montant</label>
                        <input type="number" class="w-full border rounded px-3 py-2" name="montant"
                            placeholder="Ex: 150">
                    </div>
                    <div>
                        <label class="block text-gray-700">Date</label>
                        <input type="date" class="w-full border rounded px-3 py-2" name="date">
                    </div>
                    <button type="submit"
                        class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 w-full transition">Ajouter</button>
                </form>
            </div>

            <!-- Tableau transactions récentes -->
            <div class="bg-white shadow rounded-lg p-6 col-span-2 hover:shadow-lg transition">
                <h3 class="text-lg font-semibold mb-4">Transactions Récentes</h3>
                <table class="w-full text-left table-auto mb-4">
                    <thead>
                        <tr class="bg-gray-200">
                            <th class="px-4 py-2">Date</th>
                            <th class="px-4 py-2">Catégorie</th>
                            <th class="px-4 py-2">Montant</th>
                            <th class="px-4 py-2">Type</th>
                            <th class="px-4 py-2">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="transactionsTable">
                        <tr class="border-b">
                            <td class="px-4 py-2">28/09/2025</td>
                            <td class="px-4 py-2">Alimentation</td>
                            <td class="px-4 py-2 text-red-500">-150 MAD</td>
                            <td class="px-4 py-2">Dépense</td>
                            <td class="px-4 py-2">
                                <button class="text-blue-500 hover:underline">Éditer</button>
                                <button class="text-red-500 hover:underline ml-2">Supprimer</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <button class="bg-gray-200 px-3 py-1 rounded hover:bg-gray-300 transition">Exporter CSV</button>
            </div>
        </div>

        <!-- Budgets et Objectifs -->
        <div class="grid md:grid-cols-2 gap-6 mt-6">
            <div class="bg-white shadow rounded-lg p-6 hover:shadow-lg transition">
                <h3 class="text-lg font-semibold mb-4">Budgets par Catégorie</h3>
                <ul class="space-y-3 mb-4" id="budgetList">
                    <% categories.forEach(cat=> { %>
                        <li class="flex justify-between items-center bg-gray-50 p-3 rounded-lg">
                            <span><%= cat.name %> : <%= cat.current || 0 %> MAD / <%= cat.limit || 0 %> MAD</span>
                            <div class="flex gap-2">
                                <button class="updateCategory bg-yellow-400 hover:bg-yellow-500 text-white px-2 py-1 rounded text-sm transition"
                                    data-id="<%= cat._id %>" 
                                    data-name="<%= cat.name %>" 
                                    data-limit="<%= cat.limit %>">
                                    Modifier
                                </button>
                                <button class="deleteCategory bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded text-sm transition"
                                    data-id="<%= cat._id %>">
                                    Supprimer
                                </button>
                            </div>
                        </li>
                    <% }) %>
                </ul>

                <!-- Formulaire Catégorie -->
                <form id="categoryForm" class="space-y-3 bg-gray-50 p-4 rounded-lg">
                    <input type="hidden" name="id" id="categoryId">
                    <div>
                        <label class="block text-gray-700">Nom de la Catégorie</label>
                        <input type="text" name="name" id="categoryName" placeholder="Ex: Santé"
                            class="w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-400">
                    </div>
                    <div>
                        <label class="block text-gray-700">Limite (MAD)</label>
                        <input type="number" name="limit" id="categoryLimit" placeholder="Ex: 2000"
                            class="w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-400">
                    </div>
                    <button type="submit"
                        id="categorySubmitBtn"
                        class="bg-blue-500 text-white px-4 py-2 rounded w-full hover:bg-blue-600 transition">
                        Ajouter Catégorie
                    </button>
                </form>
            </div>

            <div class="bg-white shadow rounded-lg p-6 hover:shadow-lg transition">
                <h3 class="text-lg font-semibold mb-4">Objectifs d'Épargne</h3>
                <ul class="list-disc pl-5 space-y-2">
                    <li>Vacances : 5000 MAD / 2000 MAD épargnés</li>
                    <li>Achat ordinateur : 7000 MAD / 1500 MAD épargnés</li>
                </ul>
            </div>
        </div>

        <!-- Graphiques -->
        <div class="grid md:grid-cols-2 gap-6 mt-6">
            <div class="bg-white shadow rounded-lg p-6 hover:shadow-lg transition">
                <h3 class="text-lg font-semibold mb-4">Répartition des Dépenses</h3>
                <canvas id="pieChart"></canvas>
            </div>
            <div class="bg-white shadow rounded-lg p-6 hover:shadow-lg transition">
                <h3 class="text-lg font-semibold mb-4">Évolution Revenus/Dépenses</h3>
                <canvas id="lineChart"></canvas>
            </div>
        </div>

    </div>

    <script>
        let flashMessages = [];

        // Charts
        const pieData = {
            labels: ['Alimentation', 'Transport', 'Loisirs', 'Autres'],
            datasets: [{
                data: [150, 200, 100, 50],
                backgroundColor: ['#f87171', '#60a5fa', '#34d399', '#fbbf24'],
            }]
        };
        new Chart(document.getElementById('pieChart'), { type: 'pie', data: pieData });

        const lineData = {
            labels: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil'],
            datasets: [{
                label: 'Dépenses',
                data: [1200, 900, 1400, 1100, 1300, 1000, 900],
                borderColor: '#f87171',
                fill: false,
            }, {
                label: 'Revenus',
                data: [3000, 3500, 3200, 4000, 3700, 3800, 3900],
                borderColor: '#34d399',
                fill: false,
            }]
        };
        new Chart(document.getElementById('lineChart'), { type: 'line', data: lineData });

        // Transaction Form AJAX
        const transactionForm = document.getElementById('transactionForm');
        const transactionsTable = document.getElementById('transactionsTable');

        transactionForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const data = Object.fromEntries(new FormData(transactionForm));

            try {
                const res = await fetch('/api/transactions/create', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data),
                    credentials: 'include'
                });
                const result = await res.json();

                if (!res.ok) {
                    flashMessages.push({ type: 'error', text: result.message || "Erreur" });
                    showFlashMessages(flashMessages);
                    flashMessages = [];
                    return;
                }

                flashMessages.push({ type: 'success', text: "Transaction ajoutée avec succès !" });
                showFlashMessages(flashMessages);

                const row = document.createElement('tr');
                row.classList.add('border-b');
                row.innerHTML = `
                    <td class="px-4 py-2">${result.date}</td>
                    <td class="px-4 py-2">${result.categorie}</td>
                    <td class="px-4 py-2 ${result.type === 'depense' ? 'text-red-500' : 'text-green-500'}">
                        ${result.type === 'depense' ? '-' : '+'}${result.montant} MAD
                    </td>
                    <td class="px-4 py-2">${result.type === 'depense' ? 'Dépense' : 'Revenu'}</td>
                    <td class="px-4 py-2">
                        <button class="text-blue-500 hover:underline">Éditer</button>
                        <button class="text-red-500 hover:underline ml-2">Supprimer</button>
                    </td>
                `;
                transactionsTable.prepend(row);
                transactionForm.reset();

            } catch (err) {
                flashMessages.push({ type: 'error', text: err.message });
                showFlashMessages(flashMessages);
                flashMessages = [];
            }
        });

        // Update/Delete Category Logic
        const categoryForm = document.getElementById('categoryForm');
        const categoryIdInput = document.getElementById('categoryId');
        const categoryNameInput = document.getElementById('categoryName');
        const categoryLimitInput = document.getElementById('categoryLimit');
        const categorySubmitBtn = document.getElementById('categorySubmitBtn');

        document.addEventListener("click", (e) => {
            if (e.target.classList.contains("updateCategory")) {
                const id = e.target.dataset.id;
                const name = e.target.dataset.name;
                const limit = e.target.dataset.limit;

                categoryIdInput.value = id;
                categoryNameInput.value = name;
                categoryLimitInput.value = limit;
                categorySubmitBtn.textContent = "Mettre à jour";
                categorySubmitBtn.classList.replace("bg-blue-500", "bg-yellow-500");
            }

            if (e.target.classList.contains("deleteCategory")) {
                const id = e.target.dataset.id;
                if (confirm("Voulez-vous vraiment supprimer cette catégorie ?")) {
                    fetch(`/api/categories/delete/${id}`, {
                        method: "DELETE",
                        credentials: "include"
                    })
                    .then(res => res.json())
                    .then(result => {
                        if (result.success) {
                            e.target.closest("li").remove();
                            flashMessages.push({ type: 'success', text: "Catégorie supprimée avec succès !" });
                            showFlashMessages(flashMessages);
                            flashMessages = [];
                        } else {
                            flashMessages.push({ type: 'error', text: result.message });
                            showFlashMessages(flashMessages);
                            flashMessages = [];
                        }
                    })
                    .catch(err => {
                        flashMessages.push({ type: 'error', text: err.message });
                        showFlashMessages(flashMessages);
                        flashMessages = [];
                    });
                }
            }
        });

        categoryForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const data = Object.fromEntries(new FormData(categoryForm));

            const isUpdate = !!data.id;
            const url = isUpdate ? `/api/categories/update/${data.id}` : '/api/categories/create';
            const method = isUpdate ? 'PUT' : 'POST';

            try {
                const res = await fetch(url, {
                    method,
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data),
                    credentials: 'include'
                });
                const result = await res.json();

                if (!res.ok) {
                    flashMessages.push({ type: 'error', text: result.message || "Erreur" });
                    showFlashMessages(flashMessages);
                    flashMessages = [];
                    return;
                }

                flashMessages.push({ type: 'success', text: isUpdate ? "Catégorie mise à jour !" : "Catégorie ajoutée avec succès !" });
                showFlashMessages(flashMessages);
                flashMessages = [];

                window.location.reload();

            } catch (err) {
                flashMessages.push({ type: 'error', text: err.message });
                showFlashMessages(flashMessages);
                flashMessages = [];
            }
        });

        // Logout
        const logoutBtn = document.getElementById("logoutBtn");
        logoutBtn.addEventListener("click", async () => {
            try {
                const res = await fetch("/auth/logout", {
                    method: "POST",
                    credentials: "include"
                });

                if (res.ok) {
                    window.location.href = "/auth/login";
                } else {
                    alert("Erreur lors de la déconnexion");
                }
            } catch (err) {
                console.error("Erreur logout:", err);
            }
        });

        // Flash from server
        window.addEventListener('DOMContentLoaded', () => {
            let serverFlash = [];

            <% if (success_msg && success_msg.length > 0) { %>
                serverFlash.push({ type: 'success', text: "<%= success_msg %>" });
            <% } %>
            <% if (error_msg && error_msg.length > 0) { %>
                <% error_msg.forEach(err => { %>
                    serverFlash.push({ type: 'error', text: "<%= typeof err === 'string' ? err : err.message %>" });
                <% }) %>
            <% } %>

            if (serverFlash.length > 0) {
                showFlashMessages(serverFlash);
                serverFlash = [];
            }
        });
    </script>
    <script src="/js/flashMessages.js"></script>
</body>

</html>
